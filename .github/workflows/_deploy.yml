name: deploy

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
    secrets:
      FIREBASE_TOKEN:
        required: true
      FIREBASE_API_KEY:
        required: true
      FIREBASE_APP_ID:
        required: true
      FIREBASE_AUTH_DOMAIN:
        required: true
      FIREBASE_MESSAGING_SENDER_ID:
        required: true
      FIREBASE_PROJECT_ID:
        required: true
      FIREBASE_STORAGE_BUCKET:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      BASICAUTH_USERNAME:
        required: true
      BASICAUTH_PASSWORD:
        required: true

jobs:
  firebase_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: firebase
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: firebase/yarn.lock
      - name: install dependencies for firebase
        run: yarn install --frozen-lockfile
      # TODO: キャッシュを効かせる
      - name: install dependencies for function
        working-directory: firebase/functions
        run: yarn install --frozen-lockfile

      - name: deploy
        run: yarn run deploy --project ${{ inputs.stage }} --token ${{ secrets.FIREBASE_TOKEN }}

  terraform_apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: run terraform plan
        run: |
          terraform init
          terraform workspace select ${{ inputs.stage }}
          terraform apply -auto-approve \
            -var 'basicauth_username=${{ secrets.BASICAUTH_USERNAME }}' \
            -var 'basicauth_password=${{ secrets.BASICAUTH_PASSWORD }}'

  frontend_test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.stage }}
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: firebase/yarn.lock
      - name: install dependencies
        run: yarn install --frozen-lockfile

      - name: create dotenv
        run: |
          echo "VITE_STAGE=\"${{ inputs.stage }}\""                                                > .env
          echo "VITE_FIREBASE_API_KEY=\"${{ secrets.FIREBASE_API_KEY }}\""                         >> .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=\"${{ secrets.FIREBASE_AUTH_DOMAIN }}\""                 >> .env
          echo "VITE_FIREBASE_PROJECT_ID=\"${{ secrets.FIREBASE_PROJECT_ID }}\""                   >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=\"${{ secrets.FIREBASE_STORAGE_BUCKET }}\""           >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=\"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"" >> .env
          echo "VITE_FIREBASE_APP_ID=\"${{ secrets.FIREBASE_APP_ID }}\""                           >> .env

      - name: build
        run: yarn run build

      - name: upload to s3
        run: aws s3 sync --delete ./dist s3://todobox-${{ inputs.stage }}-frontend
