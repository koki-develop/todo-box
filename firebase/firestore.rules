rules_version = '2';
service cloud.firestore {
  function loggedInWith(userId) {
    return request.auth != null && request.auth.uid == userId;
  }

  function hasKeys(data, keys) {
    return data.keys().hasOnly(keys) && data.keys().hasAll(keys);
  }

  function hasAffectedKeys(data, keys) {
    return data.diff(resource.data).affectedKeys().hasAny(keys);
  }

  function validateCreateProjectInput(data) {
    return hasKeys(data, ['name']) &&
    data.name is string;
  }

  function validateUpdateProjectInput(data) {
    return hasAffectedKeys(data, ['name']) &&
    (!hasKeys(data, ['name']) || data.name is string);
  }

  match /databases/{database}/documents {
    match /users/{userId} {
      match /projects/{projectId} {
        allow list, get: if loggedInWith(userId);
        allow create: if loggedInWith(userId) && validateCreateProjectInput(request.resource.data);
        allow update: if loggedInWith(userId) && validateUpdateProjectInput(request.resource.data);
        allow delete: if loggedInWith(userId);

        match /counters/tasks/shards/{shardId} {
          allow list, get: if loggedInWith(userId)
          allow create: if loggedInWith(userId) && hasKeys(request.resource.data, ['count']) && request.resource.data.count == 0;
          allow update: if loggedInWith(userId) && hasAffectedKeys(request.resource.data, ['count']);
        }

        match /sections/{sectionId} {
          allow list, get: if loggedInWith(userId);
          allow create: if loggedInWith(userId) && hasKeys(request.resource.data, ['name', 'index']);
          allow update: if loggedInWith(userId) && hasAffectedKeys(request.resource.data, ['name', 'index']);
          allow delete: if loggedInWith(userId);
        }

        match /tasks/{taskId} {
          allow list, get: if loggedInWith(userId);
          allow create: if loggedInWith(userId) && hasKeys(request.resource.data, ['sectionId', 'index', 'title', 'description', 'completedAt']);
          allow update: if loggedInWith(userId) && hasAffectedKeys(request.resource.data, ['sectionId', 'index', 'title', 'description', 'completedAt']);
          allow delete: if loggedInWith(userId);
        }
      }
    }
  }
}
